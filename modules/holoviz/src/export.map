/*
 * SPDX-FileCopyrightText: Copyright (c) 2022-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
{
    global:
        extern "C++" {
            "holoscan::viz::Init(GLFWwindow*, holoscan::viz::InitFlags)";
            "holoscan::viz::Init(unsigned int, unsigned int, char const*, holoscan::viz::InitFlags)";
            "holoscan::viz::Init(char const*, unsigned int, unsigned int, unsigned int, holoscan::viz::InitFlags)";

            "holoscan::viz::ImGuiSetCurrentContext(ImGuiContext*)";

            "holoscan::viz::SetCudaStream(CUstream_st*)";

            "holoscan::viz::SetFont(char const*, float)";

            "holoscan::viz::WindowShouldClose()";
            "holoscan::viz::WindowIsMinimized()";

            "holoscan::viz::Shutdown()";

            "holoscan::viz::Begin()";
            "holoscan::viz::End()";

            "holoscan::viz::BeginImageLayer()";
            "holoscan::viz::ImageCudaDevice(unsigned int, unsigned int, holoscan::viz::ImageFormat, unsigned long long)";
            "holoscan::viz::ImageCudaArray(holoscan::viz::ImageFormat, CUarray_st*)";
            "holoscan::viz::ImageHost(unsigned int, unsigned int, holoscan::viz::ImageFormat, void const*)";
            "holoscan::viz::LUT(unsigned int, holoscan::viz::ImageFormat, unsigned long, void const*, bool)";

            "holoscan::viz::BeginImGuiLayer()";

            "holoscan::viz::BeginGeometryLayer()";
            "holoscan::viz::Color(float, float, float, float)";
            "holoscan::viz::LineWidth(float)";
            "holoscan::viz::PointSize(float)";
            "holoscan::viz::Primitive(holoscan::viz::PrimitiveTopology, unsigned int, unsigned long, float const*)";
            "holoscan::viz::Text(float, float, float, char const*)";
            "holoscan::viz::DepthMap(holoscan::viz::DepthMapRenderMode, unsigned int, unsigned int, holoscan::viz::ImageFormat, unsigned long long, holoscan::viz::ImageFormat, unsigned long long)";

            "holoscan::viz::LayerOpacity(float)";
            "holoscan::viz::LayerPriority(int)";
            "holoscan::viz::LayerViewCamera(holoscan::viz::Vector3f*, holoscan::viz::Vector3f*, holoscan::viz::Vector3f*)";

            "holoscan::viz::EndLayer()";

            "holoscan::viz::ReadFramebuffer(holoscan::viz::ImageFormat, unsigned int, unsigned int, unsigned long, unsigned long long)";
        };
    local:
        *;
};